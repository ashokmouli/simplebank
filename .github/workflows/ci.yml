# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres:16
          # Provide the password for postgres
          env:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: simple_bank

          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install sqlc
      run: |
        curl -L https://downloads.sqlc.dev/sqlc_1.25.0_linux_amd64.tar.gz | gunzip | tar xvf -
        sudo mv sqlc /usr/bin

    - name: Generate sqlc files
      run: make sqlc

    - name: Run mockgen
      run: |
        go install github.com/golang/mock/mockgen@v1.6.0
        make mock

    - name: Download migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin

    - name: Run migration
      run: make migrateup

    - name: Generate source files from protobuf files
      run: |
        curl -L --output protoc-26.1-linux-x86_64.zip https://github.com/protocolbuffers/protobuf/releases/download/v26.1/protoc-26.1-linux-x86_64.zip
        unzip protoc-26.1-linux-x86_64.zip bin/protoc
        echo "mv bin/protoc /usr/bin"
        sudo mv bin/protoc /usr/bin
        echo "go install google.golang.org/protobuf/cmd/protoc-gen-go"
        go install google.golang.org/protobuf/cmd/protoc-gen-go 
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpcinst
        go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway 
        go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2
        mkdir pb
        protoc --proto_path=proto --go_out=pb --go_opt=paths=source_relative --go-grpc_out=pb --go-grpc_opt=paths=source_relative --grpc-gateway_out=pb --grpc-gateway_opt paths=source_relative proto/*.proto

    - name: Test
      run: make tests