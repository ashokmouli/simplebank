name: Deploy to production

on:
  push:
    branches: [ "main" ]
 

jobs:

  build:
    name:  Deploy image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download kubectl to runner
        uses: azure/setup-kubectl@v3
        with:
         version: '1.29.1'
        id: install

      - name: Update kubeconfig so that it can access EKS cluster
        run: aws eks update-kubeconfig --name simple-bank --region us-west-1

      - name: Update app.env by downloading the env settings from aws secretsmanager
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text  | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
        
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG  -t $REGISTRY/$REPOSITORY:latest .
          docker push  -a $REGISTRY/$REPOSITORY

      - name: Deploy docker image to EKS cluster
        run: |
          kubectl apply -f eks.aws-auth.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f issuer.yaml
          kubectl apply -f ingress.yaml
         

 
     